483e26259ba0530a42be722976df63a489a0e6d9..a6557f640a806096c618c84b80400120e6c419df
50fdd5e2b5c6347ccffb19efe31f271feca92de0..ce5477ef02688e4f535c6916c26193743ab38f40
7ab14aba1a1852724ef1aaa408c8bac6805919fb..8e4f7ddcef4a9b2913569e96431fe53c1fb20623
9b75443c2fabbe1043927917f620f78f0082356b..

From 7592d0a40715b9c7b6949d888297a7cf59d0afbd Mon Sep 17 00:00:00 2001
From: Robert Walker <bob.mt.wya@gmail.com>
Date: Thu, 2 Mar 2023 11:45:57 +0000
Subject: [PATCH] configure.ac: fix 32-bit target build on 64-bit host

Fix Gentoo specific multilib Portage 32-bit build on 64-bit host
system.

See: https://bugs.gentoo.org/show_bug.cgi?id=395615

Explicitly add the required -m32/m64 to *FLAGS; this overrides any
arch-specific -m* flags that may have been appended by multilib-portage.

Even though -m32/m64 is now added to *FLAGS, -m32/m64 still has to be
explicitly added to CC and CXX due to wine's build system. For example,
winegcc saves the build-time value of CC and uses it at runtime.
---

 configure.ac | 6 ++++++
 1 file changed, 6 insertions(+)


diff --git a/configure.ac b/configure.ac
index e2b76358a89..2c0de47a0e9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -153,4 +153,7 @@ case $host in
       CC="$CC -m32"
       CXX="$CXX -m32"
+      CFLAGS="$CFLAGS -m32"
+      LDFLAGS="$LDFLAGS -m32"
+      CXXFLAGS="$CXXFLAGS -m32"
       AC_CACHE_CHECK([whether $CC works], wine_cv_cc_m32,
           [AC_LINK_IFELSE([AC_LANG_PROGRAM()],[wine_cv_cc_m32=yes],[wine_cv_cc_m32=no])])
@@ -172,4 +175,7 @@ case $host in
       CC="$CC -m64"
       CXX="$CXX -m64"
+      CFLAGS="$CFLAGS -m64"
+      LDFLAGS="$LDFLAGS -m64"
+      CXXFLAGS="$CXXFLAGS -m64"
       host_cpu="x86_64"
       notice_platform="64-bit "
--
