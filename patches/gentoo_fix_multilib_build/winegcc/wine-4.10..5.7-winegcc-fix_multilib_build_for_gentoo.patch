5061261c5ebbfea147b418da7de97621d7c79c44..35242aa417cd1dd7d61e72a1c8fdabd29517367f
483e26259ba0530a42be722976df63a489a0e6d9..a6557f640a806096c618c84b80400120e6c419df

From 22bab0394c2373d40b76349e5ea6dbe595fe4154 Mon Sep 17 00:00:00 2001
From: Robert Walker <bob.mt.wya@gmail.com>
Date: Tue, 28 Feb 2023 13:12:02 +0000
Subject: [PATCH] winegcc: fix multilib build for gentoo

See: https://bugs.gentoo.org/260726
See: https://bugs.winehq.org/show_bug.cgi?id=17498
---

 tools/winebuild/main.c  | 7 +++++++
 tools/winegcc/winegcc.c | 7 +++++++
 2 files changed, 14 insertions(+)


diff --git a/tools/winebuild/main.c b/tools/winebuild/main.c
index d3087160fcb..9c764fcf843 100644
--- a/tools/winebuild/main.c
+++ b/tools/winebuild/main.c
@@ -49,8 +49,11 @@ int unwind_tables = 0;
 int unix_lib = 0;
 
+#undef FORCE_POINTER_SIZE
 #ifdef __i386__
 enum target_cpu target_cpu = CPU_x86;
+#define FORCE_POINTER_SIZE
 #elif defined(__x86_64__)
 enum target_cpu target_cpu = CPU_x86_64;
+#define FORCE_POINTER_SIZE
 #elif defined(__powerpc__)
 enum target_cpu target_cpu = CPU_POWERPC;
@@ -622,4 +625,8 @@ int main(int argc, char **argv)
     signal( SIGINT, exit_on_signal );
 
+#ifdef FORCE_POINTER_SIZE
+    force_pointer_size = sizeof(size_t);
+#endif
+
     argv = parse_options( argc, argv, spec );
     atexit( cleanup );  /* make sure we remove the output file on exit */
diff --git a/tools/winegcc/winegcc.c b/tools/winegcc/winegcc.c
index 32df2bf84c3..af8b328f01c 100644
--- a/tools/winegcc/winegcc.c
+++ b/tools/winegcc/winegcc.c
@@ -225,8 +225,11 @@ struct options
 };
 
+#undef FORCE_POINTER_SIZE
 #ifdef __i386__
 static const enum target_cpu build_cpu = CPU_x86;
+#define FORCE_POINTER_SIZE
 #elif defined(__x86_64__)
 static const enum target_cpu build_cpu = CPU_x86_64;
+#define FORCE_POINTER_SIZE
 #elif defined(__powerpc__)
 static const enum target_cpu build_cpu = CPU_POWERPC;
@@ -1355,4 +1358,8 @@ int main(int argc, char **argv)
     opts.pic = 1;
 
+#ifdef FORCE_POINTER_SIZE
+    opts.force_pointer_size = sizeof(size_t);
+#endif
+
     /* determine the processor type */
     if (strendswith(argv[0], "winecpp")) opts.processor = proc_cpp;
--
